
일반 회원 테이블
CREATE TABLE DateCockMember (
id VARCHAR2(70) PRIMARY KEY,
password VARCHAR2(100),
email VARCHAR2(100),
name VARCHAR2(30),
birth VARCHAR2(100),
phone VARCHAR2(100),
admin NUMBER(1) DEFAULT 0 NOT NULL
);
사업자 회원 테이블
CREATE TABLE DateCockBusinessMember (
businessnumber VARCHAR2(70) PRIMARY KEY,
password VARCHAR2(100),
email VARCHAR2(100),
businessname VARCHAR2(40),
phone VARCHAR2(100),
birthyear VARCHAR2(100)
);
일반 로그인 테이블
CREATE TABLE DateCockLogin (
id VARCHAR2(70) PRIMARY KEY,
password VARCHAR2(100),
CONSTRAINT FK_DateCockLogin_Member FOREIGN KEY (id) REFERENCES DateCockMember(id)
);
사업자 로그인 테이블
CREATE TABLE DateCockBusinessLogin (
businessnumber VARCHAR2(70) PRIMARY KEY,
password VARCHAR2(100),
CONSTRAINT FK_DateCockBusinessLogin_Member FOREIGN KEY (businessnumber) REFERENCES DateCockBusinessMember(businessnumber)
);
사용자 선택 정보 테이블 (필터용)
CREATE TABLE DateCockChoice (
age NUMBER(5),
address VARCHAR2(40),
activity VARCHAR2(15)
);
필터 조건 저장 테이블
CREATE TABLE DateCockCondition (
conditionAge VARCHAR2(50),
conditionZone VARCHAR2(150),
conditionActivity VARCHAR2(50)
);
사업자 가게 등록 테이블
CREATE TABLE DateCockBusinessInput (
businessnumber VARCHAR2(70) PRIMARY KEY,
businessname VARCHAR2(100),
address VARCHAR2(130),
businesstime VARCHAR2(80),
phone VARCHAR2(100),
image VARCHAR2(250),
information VARCHAR2(3000),
age NUMBER(7),
zone VARCHAR2(100),
activity VARCHAR2(40),
CONSTRAINT FK_BusinessInput_Member FOREIGN KEY (businessnumber) REFERENCES DateCockBusinessMember(businessnumber)
);
예약 테이블
CREATE TABLE DateCockReservation (
reservation_id NUMBER PRIMARY KEY,
name VARCHAR2(40),
phone VARCHAR2(100),
day DATE,
intime VARCHAR2(60),
businessname VARCHAR2(100),
id VARCHAR2(70) NOT NULL,
image VARCHAR2(1500),
CONSTRAINT FK_Reservation_Member FOREIGN KEY (id) REFERENCES DateCockMember(id)
);
자유게시판 테이블
CREATE TABLE BOARD (
BNO NUMBER PRIMARY KEY,
TITLE VARCHAR2(200) NOT NULL,
CONTENT CLOB NOT NULL,
WRITER VARCHAR2(50) NOT NULL,
REGDATE TIMESTAMP DEFAULT SYSTIMESTAMP,
VIEWCNT NUMBER DEFAULT 0,
REPLYCNT NUMBER DEFAULT 0 NOT NULL,
LIKECNT NUMBER DEFAULT 0,
THUMBNAIL VARCHAR2(300)
);
댓글 테이블
CREATE TABLE REPLY (
RNO NUMBER PRIMARY KEY,
BNO NUMBER NOT NULL,
REPLYTEXT VARCHAR2(1000) NOT NULL,
REPLYER VARCHAR2(50) NOT NULL,
REPLYDATE TIMESTAMP DEFAULT SYSTIMESTAMP,
UPDATEDATE TIMESTAMP DEFAULT SYSTIMESTAMP,
CONSTRAINT fk_reply_bno FOREIGN KEY (BNO) REFERENCES BOARD(BNO) ON DELETE CASCADE
);
사용자 QNA 게시판
CREATE TABLE USER_QNA_BOARD (
BNO NUMBER PRIMARY KEY,
TITLE VARCHAR2(200) NOT NULL,
CONTENT CLOB NOT NULL,
WRITER VARCHAR2(50) NOT NULL,
REGDATE DATE DEFAULT SYSDATE NOT NULL,
VIEWCNT NUMBER DEFAULT 0 NOT NULL,
ANSWER_STATUS VARCHAR2(20) DEFAULT '답변대기' NOT NULL,
ANSWER_CONTENT CLOB,
ANSWER_WRITER VARCHAR2(50),
ANSWER_DATE DATE,
IMAGE_FILE VARCHAR2(255),
SECRET NUMBER(1) DEFAULT 0 NOT NULL,
CONSTRAINT CK_USER_QNA_SECRET CHECK (SECRET IN (0, 1)),
CONSTRAINT CK_USER_QNA_STATUS CHECK (ANSWER_STATUS IN ('답변대기', '답변완료'))
);
사업자 QNA 게시판
CREATE TABLE BIZ_QNA_BOARD (
BNO NUMBER PRIMARY KEY,
TITLE VARCHAR2(200) NOT NULL,
CONTENT CLOB NOT NULL,
WRITER VARCHAR2(50) NOT NULL,
REGDATE DATE DEFAULT SYSDATE NOT NULL,
VIEWCNT NUMBER DEFAULT 0 NOT NULL,
ANSWER_STATUS VARCHAR2(20) DEFAULT '답변대기' NOT NULL,
ANSWER_CONTENT CLOB,
ANSWER_WRITER VARCHAR2(50),
ANSWER_DATE DATE,
IMAGE_FILE VARCHAR2(255),
SECRET NUMBER(1) DEFAULT 0 NOT NULL,
BUSINESS_NAME VARCHAR2(100),
CONSTRAINT CK_BIZ_QNA_SECRET CHECK (SECRET IN (0, 1)),
CONSTRAINT CK_BIZ_QNA_STATUS CHECK (ANSWER_STATUS IN ('답변대기', '답변완료'))
);
기본 QNA 테이블 (사용 여부 미정일 시 참고용)
CREATE TABLE DATECOCKQNA (
qnanum NUMBER PRIMARY KEY,
title VARCHAR2(300),
content VARCHAR2(2000),
writer VARCHAR2(100),
type VARCHAR2(20),
email VARCHAR2(300),
phone VARCHAR2(30),
notify_type VARCHAR2(20),
answer VARCHAR2(2000),
regdate DATE DEFAULT SYSDATE
);
방문자 메모 테이블
CREATE TABLE DateCockGuest (
name VARCHAR2(30),
memo VARCHAR2(500),
- id number(30),
todays DATE
);
시퀀스 생성
CREATE SEQUENCE DATECOCKQNA_SEQ START WITH 1000 INCREMENT BY 1;
CREATE SEQUENCE seq_reply_rno START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE seq_board_bno START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_USER_QNA_BNO START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_BIZ_QNA_BNO START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE SEQUENCE DATECOCKRESERVATION_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE DATECOCKGUEST_SEQ START WITH 1000 INCREMENT BY 1;